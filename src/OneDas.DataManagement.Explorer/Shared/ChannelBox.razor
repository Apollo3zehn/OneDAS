@inherits AppStateComponentBase

@if (this.AppState.GroupedVariables != null)
{
    <div class="available-groups">

        <MatTextField @bind-Value="this.AppState.SearchString"
                      OnInput="e => this.AppState.SearchString = e.Value.ToString()"
                      Label="Search"
                      Icon="@_searchIcon"
                      IconOnClick="@(() => this.AppState.SearchString = "")"
                      IconTrailing="true">
        </MatTextField>

        <div class="available-groups-list">
            @foreach (var entry in this.AppState.GroupedVariables.OrderBy(entry => entry.Key).Skip(this.GroupPage * this.GroupPageSize).Take(this.GroupPageSize))
            {
                <div @onclick="() => this.AppState.VariableGroup = entry.Value"
                     class="group-entry @(this.AppState.VariableGroup == entry.Value? "selected" : "")">
                    <span class="group-entry-name">@entry.Key</span>
                    <span class="group-entry-count">@entry.Value.Count</span>
                </div>
            }
        </div>

        <Paginator Length="this.AppState.GroupedVariables.Count" PageSize="this.GroupPageSize" @bind-Page="this.GroupPage"></Paginator>
    </div>

    <div class="available-variables">
        @if (this.AppState.VariableGroup != null)
        {
            <div>
                @foreach (var variable in this.AppState.VariableGroup.Skip(this.VariablePage * this.VariablePageSize).Take(this.VariablePageSize))
                {
                    <ChannelExpander Variable="variable" />
                }
            </div>

            <Paginator Length="this.AppState.VariableGroup.Count" PageSize="this.VariablePageSize" @bind-Page="this.VariablePage"></Paginator>
        }
    </div>
}