//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OneDas.Extension.Modbus {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ErrorMessage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorMessage() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OneDas.Extension.Modbus.Resources.ErrorMessage", typeof(ErrorMessage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The unit identifier is invalid. Valid node addresses are in the range of 0 - 247. Use address &apos;0&apos; to broadcast write command to all available servers. ähnelt.
        /// </summary>
        internal static string ModbusRtuClientSettings_InvalidUnitIdentifier {
            get {
                return ResourceManager.GetString("ModbusRtuClientSettings_InvalidUnitIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The unit identifier is invalid. Valid node addresses are in the range of 1 - 247. ähnelt.
        /// </summary>
        internal static string ModbusRtuServerSettings_InvalidUnitIdentifier {
            get {
                return ResourceManager.GetString("ModbusRtuServerSettings_InvalidUnitIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected COM port is does not exist. ähnelt.
        /// </summary>
        internal static string ModbusRtuSettings_ComPortDoesNotExist {
            get {
                return ResourceManager.GetString("ModbusRtuSettings_ComPortDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The port is invalid (allowed range: 1 - 65535). ähnelt.
        /// </summary>
        internal static string ModbusTcpClientSettings_PortInvalid {
            get {
                return ResourceManager.GetString("ModbusTcpClientSettings_PortInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The remote IP address is invalid. ähnelt.
        /// </summary>
        internal static string ModbusTcpClientSettings_RemoteIpAddressInvalid {
            get {
                return ResourceManager.GetString("ModbusTcpClientSettings_RemoteIpAddressInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The local IP address is invalid. ähnelt.
        /// </summary>
        internal static string ModbusTcpServerSettings_LocalIpAddressInvalid {
            get {
                return ResourceManager.GetString("ModbusTcpServerSettings_LocalIpAddressInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The port is invalid (allowed range: 1 - 65535). ähnelt.
        /// </summary>
        internal static string ModbusTcpServerSettings_PortInvalid {
            get {
                return ResourceManager.GetString("ModbusTcpServerSettings_PortInvalid", resourceCulture);
            }
        }
    }
}
